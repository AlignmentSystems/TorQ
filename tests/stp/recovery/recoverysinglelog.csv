action,ms,bytes,lang,code,repeat,minver,comment
before,0,0,q,"processcsv:getenv[`KDBTESTS],""/stp/recovery/process.csv""",1,,"Path to test process csv"
before,0,0,q,startproc:startorstopproc["start";;processcsv],1,,"Function to start a process"
before,0,0,q,stopproc:startorstopproc["stop";;processcsv],1,,"Function to stop a process"
before,0,0,q,"testtrade:((5#`GOOG),5?`4;10?100.0;10?100i;10#0b;10?.Q.A;10?.Q.A;10#`buy)",1,,"Create test trade update"
before,0,0,q,"testquote:(10?`4;(5?50.0),50+5?50.0;10?100.0;10?100i;10?100i;10?.Q.A;10?.Q.A;10#`3)",1,,"Create test quote update"
before,0,0,q,startproc["stpnone"],1,,"Start segmented tickerplant with multilog set to none"
before,0,0,q,.proc.sys "sleep 5",1,,"Sleep for 5 seconds"
before,0,0,q,.tst.allh:opentorqhandle string 101+value getenv`KDBBASEPORT,1,,"Open handle to rdball"
before,0,0,q,.tst.symh:opentorqhandle string 102+value getenv`KDBBASEPORT,1,,"Open handle to rdbsymfilt"
before,0,0,q,.tst.complexh:opentorqhandle string 103+value getenv`KDBBASEPORT,1,,"Open handle to rdbcomplexfilt"
before,0,0,q,.tst.segmentedtph:opentorqhandle string 104+value getenv`KDBBASEPORT,1,,"Open handle to segmented tickerplant"
before,0,0,q,.tst.segmentedtph".stplg.init[\"testlogsnone\"]",1,,"Create test stplog directory corresponding to mulitlog setting"
before,0,0,q,.tst.segmentedtph(`.u.upd;`trade;testtrade),1,,"Send trade update to segmented tickerplant"
before,0,0,q,.tst.segmentedtph(`.u.upd;`quote;testquote),1,,"Send quote update to segmented tickerplant"
before,0,0,q,.proc.sys "sleep 5",1,,"Sleep for 5 seconds"
true,0,0,q,10~.tst.allh"count trade",1,,"Check trade update published in rdball"
true,0,0,q,10~.tst.allh"count quote",1,,"Check quote update published in rdball"
true,0,0,q,5~.tst.symh"count trade",1,,"Check trade update published in rdbsymfilt"
true,0,0,q,enlist[`GOOG]~.tst.symh"distinct exec sym from trade",1,,"Check trade update published in rdbsymfilt"
true,0,0,q,0~.tst.symh"count quote",1,,"Check quote update published in rdbsymfilt"
true,0,0,q,5~.tst.complexh"count trade",1,,"Check trade update published in rdbcomplexfilt"
true,0,0,q,enlist[`GOOG]~.tst.complexh"distinct exec sym from trade",1,,"Check trade update published in rdbcomplexfilt"
true,0,0,q,5~.tst.complexh"count quote",1,,"Check quote update published in rdbcomplexfilt"
true,0,0,q,.tst.complexh"all 50<exec bid from quote",1,,"Check quote update published in rdbcomplexfilt"
run,0,0,q,stopproc each ("rdball";"rdbsymfilt";"rdbcomplexfilt"),1,,"Stop all rdbs"
run,0,0,q,.proc.sys "sleep 5",1,,"Sleep for 5 seconds"
true,0,0,q,all deadproccheck["rdb";] each ("rdball";"rdbsymfilt";"rdbcomplexfilt"),1,,"Check all rdbs are dead"
run,0,0,q,startproc each ("rdball";"rdbsymfilt";"rdbcomplexfilt"),1,,"Start all rdbs"
run,0,0,q,.proc.sys "sleep 5",1,,"Sleep for 5 seconds"
run,0,0,q,.tst.allh:opentorqhandle string 101+value getenv`KDBBASEPORT,1,,"Open handle to rdball"
run,0,0,q,.tst.symh:opentorqhandle string 102+value getenv`KDBBASEPORT,1,,"Open handle to rdbsymfilt"
run,0,0,q,.tst.complexh:opentorqhandle string 103+value getenv`KDBBASEPORT,1,,"Open handle to rdbcomplexfilt"
true,0,0,q,10~.tst.allh"count trade",1,,"Check trade data has correctly replayed in rdball"
true,0,0,q,10~.tst.allh"count quote",1,,"Check quote data has correctly replayed in rdball"
true,0,0,q,5~.tst.symh"count trade",1,,"Check trade data has correctly replayed in rdbsymfilt"
true,0,0,q,enlist[`GOOG]~.tst.symh"distinct exec sym from trade",1,,"Check trade data has correctly replayed in rdbsymfilt"
true,0,0,q,0~.tst.symh"count quote",1,,"Check quote data has correctly replayed in rdbsymfilt"
true,0,0,q,5~.tst.complexh"count trade",1,,"Check trade data has correctly replayed in rdbcomplexfilt"
true,0,0,q,enlist[`GOOG]~.tst.complexh"distinct exec sym from trade",1,,"Check trade data has correctly replayed in rdbcomplexfilt"
true,0,0,q,5~.tst.complexh"count quote",1,,"Check quote data has correctly replayed in rdbcomplexfilt"
true,0,0,q,.tst.complexh"all 50<exec bid from quote",1,,"Check quote data has correctly replayed in rdbcomplexfilt"
after,0,0,q,stopproc["stpnone"],1,,"Stop segmentedtickerplant"
